function O=B0_var_magnus(timegrid,W,f11,f12,f22,df11,df12,df22,order,varargin)
% Requires B=0, A_t=[f11(t) f12(t); 0 f22(t)] 
% Input:
%   timegrid
%   W
%   order
% Output:
%   order=1 then O d\times d \times N \times M tensor
%   order=2 then O d\times d \times N \times M tensor
%   O [d\times d \times N \times M,d\times d \times N \times M]
%       tensor
    comp_device='cpu';
    if isempty(varargin)==0
        for k=1:1:length(varargin)
            switch varargin{k}
                case 'Comp Device'
                    comp_device=varargin{k+1};
            end
        end
    end
    N=size(W,3);
    M=size(W,4);
    W=reshape(W,[N M]);
    f11=reshape(f11,[N 1]);
    f12=reshape(f12,[N 1]);
    f22=reshape(f22,[N 1]);
    df11=reshape(df11,[N 1]);
    df12=reshape(df12,[N 1]);
    df22=reshape(df22,[N 1]);
    timegrid=reshape(timegrid,[N 1]);
    dt=diff(timegrid);
    d=2;
    [N,M]=size(W);
    if strcmp(comp_device,'cpu')
        O=zeros(d,d,N,M);
    else
        W=gpuArray(W);
        dt=gpuArray(dt);
        f11=gpuArray(f11);
        f12=gpuArray(f12);
        f22=gpuArray(f22);
        df11=gpuArray(df11);
        df12=gpuArray(df12);
        df22=gpuArray(df22);
        O=gpuArray.zeros(d,d,N,M);
    end
    function O1=firstorder()
        O1=O;
        Idf11W=l_int(W.*df11);
        Idf12W=l_int(W.*df12);
        Idf22W=l_int(W.*df22);
%         I2f11=l_int(f11.^2);
%         If11pf22f12=l_int((f11+f22).*f12);
%         I2f22=l_int(f22.^2);
        O1(1,1,:,:)=...
            W.*f11-...
            Idf11W;
        O1(1,2,:,:)=...
            W.*f12-...
            Idf12W;
        O1(2,2,:,:)=...
            W.*f22-...
            Idf22W;
        O1=gather(O1);
    end
    function O2=secondorder()
        O2=O;
        O2(1,1,:,:)=...
            -l_int(f11.^2)./2;
%         O2(1,2,:,:)=...
%             -l_int((f11+f22).*f12)./2;
        O2(2,2,:,:)=...
            -l_int(f22.^2)./2;
        O2(1,2,:,:)=-l_int((f11+f22).*f12)./2-...
            (...
                -W.*f12.*...
                    l_int(W.*(df11-df22))-...
                l_int(W.^2.*(df12.*(f11-f22)))+...
                l_int(W.^2.*((df11-df22).*f12))+...
                l_int(W.*df12.*...
                    l_int(W.*(df11-df22)))-...
                W.*(f22-f11).*...
                    l_int(W.*df12)+...
                l_int(W.*(df22-df11).*...
                    l_int(W.*df12))...
            )./2;%+...
%             l_int(...
%                 ((f22./3+f11./6).*f12).*...
%                 (...
%                     W.*(f11-f22)-...
%                     l_int(W.*(df11-df22))...
%                 )...
%             )+...
%             l_int(...
%                 (f22.^2./3-f11.^2./6-f22.*f11./6).*...
%                 (...
%                     W.*(f12)-...
%                     l_int(W.*df12)...
%                 )...
%             );
        O2=gather(O2);
    end
    function O3=thirdorder()
        O3=O;
        %Diffusion
        %A
        g=(f22-f11).*f12;
        dg=(df22-df11).*f12+df12.*(f22-f11);
        h=df22-df11;
        S1=...
            fubini_pq(g,dg,h,1,1)./6;
%         sigma3=...
%             integrand_pq(g,h,1,1)./6;
%         d1=...
%             integrand_pq(g,h,1,1)./4;
%         d2=...
%             integrand_pq(g,h,1,1)./(-12);
        %B
        g=f22-f11;
        dg=df22-df11;
        h=(f22-f11).*df12;
        S1=S1+...
            fubini_pq(g,dg,h,0,2)./4;
%         sigma3=sigma3+...
%             integrand_pq(g,h,0,2)./4;
%         d1=d1+...
%             integrand_pq(g,h,0,2)./4;
        %C
        g=f22-f11;
        dg=df22-df11;
        h=(df22-df11).*f12;
        S1=S1+...
            fubini_pq(g,dg,h,0,2)./(-4);
%         sigma3=sigma3+...
%             integrand_pq(g,h,0,2)./(-4);
%         d1=d1+...
%             integrand_pq(g,h,0,2)./(-4);
        %D
        g=f22-f11;
        dg=df22-df11;
        h=df12;
        k=df22-df11;
        S1=S1+...
            fubini_ghk(g,dg,h,k)./(-4);
%         sigma3=sigma3+...
%             integrand_ghk(g,h,k)./(-4);
%         d1=d1+...
%             integrand_ghk(g,h,k)./(-4);
        %E
        g=(f22-f11).^2;
        dg=2.*(f22-f11).*(df22-df11);
        h=df12;
        S1=S1+...
            fubini_pq(g,dg,h,1,1)./(-6);
%         sigma3=sigma3+...
%             integrand_pq(g,h,1,1)./(-6);
%         d1=d1+...
%             integrand_pq(g,h,1,1)./(-4);
%         d2=d2+...
%             integrand_pq(g,h,1,1)./(12);
        %F
        g=f22-f11;
        dg=df22-df11;
        h=df22-df11;
        k=df12;
        S1=S1+...
            fubini_ghk(g,dg,h,k)./(4);
%         sigma3=sigma3+...
%             integrand_ghk(g,h,k)./(4);
%         d1=d1+...
%             integrand_ghk(g,h,k)./(4);
        %G
        g=f22-f11;
        dg=df22-df11;
        h=(f11+f22).*f12;
        S1=S1+...
            fubini_pq(g,dg,h,0,0)./(4);
%         sigma3=sigma3+...
%             integrand_pq(g,h,0,0)./(4);
%         d1=d1+...
%             integrand_pq(g,h,0,0)./(4);
        %H
        g=f12;
        dg=df12;
        h=f22.^2-f11.^2;
        S1=S1+...
            fubini_pq(g,dg,h,0,0)./(-4);
%         sigma3=sigma3+...
%             integrand_pq(g,h,0,2)./(-4);
%         d1=d1+...
%             integrand_pq(g,h,0,2)./(-4);
        %I
        g=f12;
        dg=df12;
        h1=df22-df11;
        h2=h1;
        S1=S1+...
            fubini_pqq(g,dg,h1,h2)./(12);
%         sigma3=sigma3+...
%             integrand_pqq(g,h1,h2)./(12);
%         d2=d2+...
%             integrand_pqq(g,h1,h2)./(12);
        %J
        g=f22-f11;
        dg=df22-df11;
        h1=df22-df11;
        h2=df12;
        S1=S1+...
            fubini_pqq(g,dg,h1,h2)./(-12);
%         sigma3=sigma3+...
%             integrand_pqq(g,h1,h2)./(-12);
%         d2=d2+...
%             integrand_pqq(g,h1,h2)./(-12);
        %Drift
%         d1=d1.*(f22-f11)./(-6);
%         d1=l_int(d1);
%         d3=d2;
%         d2=d2.*f11;
%         d2=l_int(d2);
%         d3=d3.*((f22-f11)./2);
%         d3=l_int(d3);
%         d4=sigma3.*((f11+f22)./(-2));
%         d4=l_int(d4);
%         d5=...
%             (-1/2).*W.*((f22-f11).^2.*f12).*...
%                 l_int(W.*(df22-df11))+...
%             (1/2).*(f22-f11).*f12.*...
%                 (l_int(W.*(df22-df11))).^2+...
%             (1/2).*W.*((f22-f11).^3).*...
%                 l_int(W.*(df12))+...
%             (-1/2).*((f22-f11).^2).*...
%                 l_int(W.*(df12)).*...
%                 l_int(W.*(df22-df11));
%         d5=l_int(d5./(-12));
%         d6=...
%             ((f11+f22).*f12).*...
%                 l_int(W.*(df22-df11))+...
%             (-1).*(f22.^2-f11.^2).*...
%                 l_int(W.*(df12));
%         d6=d6.*...
%             (...
%                 W.*(f22-f11)-...
%                 l_int(W.*(df22-df11)))./24;
%         d6=l_int(d6);
%         O3(1,2,:,:)=...
%             S1+...
%             d1+d2+d3+d4+d5+d6;
        O3(1,2,:,:)=...
            S1+...
            l_int(...
                ((f22./3+f11./6).*f12).*...
                (...
                    W.*(f11-f22)-...
                    l_int(W.*(df11-df22))...
                )...
            )+...
            l_int(...
                (f22.^2./3-f11.^2./6-f22.*f11./6).*...
                (...
                    W.*(f12)-...
                    l_int(W.*df12)...
                )...
            );
        O3=gather(O3);
%         function y=integrand_pq(g,h,p,q)
%             y=...
%                 W.^p.*(g).*...
%                     l_int(W.^q.*h);
%         end
%         function y=integrand_ghk(g,h,k)
%             y=...
%                 g.*...
%                     l_int(W.*h.*...
%                         l_int(W.*k));
%         end
%         function y=integrand_pqq(g,h1,h2)
%             y=...
%                 g.*...
%                     l_int(W.*h1.*...
%                         l_int(W.*h2));
%         end
        function y=fubini_pqq(g,dg,h1,h2)
            I1=...
                W.*g.*...
                    l_int(W.*h1).*...
                    l_int(W.*h2);
            I2=...
                l_int(W.^2.*(g.*h2).*...
                    l_int(W.*h1));
            I3=...
                l_int(W.^2.*(g.*h1).*...
                    l_int(W.*h2));
            I4=...
                l_int(W.*dg.*...
                    l_int(W.*h1).*...
                    l_int(W.*h2));
            y=I1-I2-I3-I4;
        end
        function y=fubini_pq(g,dg,h,p,q)
            if p>= 1 && q>= 1
                I1=...
                    W.^(p+1).*g.*l_int(W.^q.*h);
                I2=...
                    l_int(W.^(p+q+1).*(g.*h));
                I3=...
                    l_int(W.^(p+1).*dg.*...
                        l_int(W.^q.*h));
                I4=...
                    ((p*(p+1))/2).*(...
                        l_int(g.*W.^(p-1).*...
                            l_int(W.^q.*h)));
                y=(I1-I2-I3-I4)./(p+1);
            elseif p==0 && q>=1
                I1=...
                    W.*g.*l_int(W.^q.*h);
                I2=...
                    l_int(W.^(q+1).*(g.*h));
                I3=...
                    l_int(W.*dg.*...
                        l_int(W.^q.*h));
                y=I1-I2-I3;
            elseif p>1 && q==0
                I1=...
                    W.^(p+1).*g.*l_int(h);
                I2=...
                    l_int(W.^(p+1).*...
                        dg.*l_int(h));
                I3=...
                    l_int(W.^(p+1).*(g.*h));
                I4=...
                    ((p*(p+1))/2).*(...
                        l_int(W.^(p-1).*...
                            g.*l_int(h)));
                y=(I1-I2-I3-I4)./(p+1);
            elseif p==1 && q==0
                I1=...
                    W.^2.*g.*l_int(h);
                I2=...
                    l_int(W.^2.*...
                        dg.*l_int(h));
                I3=...
                    l_int(W.^2.*(g.*h));
                I4=...
                    l_int(g.*l_int(h));
                y=(I1-I2-I3-I4)./2;
            elseif p==0 && q==0
                I1=...
                    W.*g.*l_int(h);
                I2=...
                    l_int(W.*...
                        dg.*l_int(h));
                I3=...
                    l_int(W.*(g.*h));
                y=I1-I2-I3;
            else
                disp('fubini new case')
                y=-1;
            end
        end
        function y=fubini_ghk(g,dg,h,k)
            I1=...
                W.*g.*...
                    l_int(W.*h.*...
                        l_int(W.*k));
            I2=...
                l_int(W.^2.*(g.*h).*...
                    l_int(W.*k));
            I3=...
                l_int(W.*dg.*...
                    l_int(W.*h.*...
                        l_int(W.*k)));
            y=I1-I2-I3;
        end
    end
    function I=l_int(W)
        I=reshape(O(2,1,:,:),[N,M]);
        if size(W,2)==1
            I(2:end,:)=repmat(cumsum(W(1:end-1,:).*dt,1),[1 M]);
        else
            I(2:end,:)=cumsum(W(1:end-1,:).*dt,1);
        end
    end
    if order==1
        O=firstorder();
    elseif order==2
        O=firstorder()+secondorder();
    elseif order==3
        O=firstorder()+secondorder()+thirdorder();
    else
        O=[firstorder(),secondorder(),thirdorder()];
    end
end